<?php
/**
 * @file
 * Integration with the Sentry event logging platform via the Raven-PHP library.
 */

/**
 * Implements hook_boot().
 */
function sentry_boot() {
  $client = sentry_get_client();
  if ($client) {
    $error_handler = new Raven_ErrorHandler($client, TRUE);
    $error_handler->registerExceptionHandler();
    $error_handler->registerErrorHandler();
    $error_handler->registerShutdownFunction();
  }
}

/**
 * Implements hook_watchdog().
 */
function sentry_watchdog($log_entry) {
  if ($log_entry['severity'] <= variable_get('sentry_severity', WATCHDOG_ERROR)) {
    $client = sentry_get_client();
    if ($client) {
      if (!is_array($log_entry['variables'])) {
        $log_entry['variables'] = array();
      }
      $message = t($log_entry['message'], $log_entry['variables']);
      $message = strip_tags($message);
      $severity_levels = watchdog_severity_levels();

      // Get trace of original watchdog call.
      $stack = array_slice(debug_backtrace(), 3);

      $data = array(
        'message' => $message,
        'level' => sentry_severity_watchdog_to_sentry($log_entry['severity']),
        'sentry.interfaces.Exception' => array(
          'value' => $message,
          'type' => 'watchdog',
          'module' => $stack[0]['file'] . ':' . $stack[0]['line'],
        ),
        'extra' => array(
          'watchdog type' => $log_entry['type'],
          'watchdog severity' => $severity_levels[$log_entry['severity']],
          'watchdog uid' => isset($log_entry['user']) ? $log_entry['user']->uid : 0,
        ),
      );

      $client->capture($data, $stack);
    }
  }
}

/**
 * Returns a sentry client.
 */
function sentry_get_client() {
  static $client = FALSE;

  if ($client === FALSE) {
    sentry_require();
    $sentry_dsn = variable_get('sentry_dsn', FALSE);
    if ($sentry_dsn === FALSE) {
      return FALSE;
    }
    $client = new Raven_Client($sentry_dsn);
    $client->store_errors_for_bulk_send = TRUE;
  }

  return $client;
}

/**
 * Maps watchdog severity levels to Sentry severity levels.
 */
function sentry_severity_watchdog_to_sentry($watchdog_severity) {
  sentry_require();

  $map = array(
    WATCHDOG_EMERGENCY => Raven_Client::FATAL,
    WATCHDOG_ALERT => Raven_Client::ERROR,
    WATCHDOG_CRITICAL => Raven_Client::ERROR,
    WATCHDOG_ERROR => Raven_Client::ERROR,
    WATCHDOG_WARNING => Raven_Client::WARNING,
  );

  if (isset($map[$watchdog_severity])) {
    return $map[$watchdog_severity];
  }

  return Raven_Client::WARNING;
}

/**
 * Get Sentry.
 */
function sentry_require() {
  static $required = FALSE;

  if (!$required) {
    require_once dirname(__FILE__) . '/lib/sentry-php/lib/Raven/Autoloader.php';
    Raven_Autoloader::register();
    $required = TRUE;
  }
}
